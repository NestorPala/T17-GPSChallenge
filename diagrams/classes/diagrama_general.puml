@startuml

class Jugador {
    - Vehiculo
    + Jugador(vehiculo)
    + posicion() : Posicion
    + puntaje() : double
    + mover(direccion)
    - chocarObstaculos()
    + recibirPenalizacion(penalizacion: int)
    + recibirPorcentaje(porcentaje: int)
    + cambiarVehiculo(nuevoVehiculo)
}

class Puntaje {
    - movimientos : double
    + verMovimientos() : double
    + sumarMovimientos(cantMovimientos: int)
    + aplicarPorcentaje(porcentaje: double)

}

class Direccion {
    - dirX : int
    - dirY : int
    + Direccion(dirHorizontal, dirVertical)
    + arriba() : Direccion {static}
    + abajo() : Direccion {static}
    + izquierda() : Direccion {static}
    + derecha() : Direccion {static}
    + calcularNuevaPosicion(unaPosicion) : Posicion
}

class Escenario {
    - alto : int
    - ancho : int
    - chocables : Chocable[][]
    - {static} instance : Escenario
    - Escenario()
    + {static} getInstance() : Escenario
    + estaDentroDelEscenario(posicion) : Bool
    + insertarChocable(chocable, posicion)
    + obtenerChocable(posicion) : Chocable

}

class Posicion {
    - x : int
    - y : int
    + Posicion(x, y)
    + equals(otraPosicion) : bool
    + x() : int
    + y() : int
    + sumarX(x: int)
    + sumarY(y: int)
}

Puntaje <-- Jugador

Posicion <-- Jugador
Jugador .> Escenario

Direccion .> Posicion
Direccion <. Jugador

Escenario ..> Posicion


@enduml