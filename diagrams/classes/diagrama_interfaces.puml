@startuml
interface Chocable {
    + devolverEfecto(moto) : IEfecto
    + devolverEfecto(auto) : IEfecto
    + devolverEfecto(todoterreno) : IEfecto
}

class Pozo {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class Vacio {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class Piquete { 
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class ControlPolicial {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class SorpresaFavorable {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class SorpresaDesfavorable {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class SorpresaCambioVehiculo {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}



abstract class Vehiculo {
    + mover(unaDireccion, unaPosicion) : Posicion
    + chocar(chocable) : Vehiculo
}

class Auto {
    + chocar(chocable) : Vehiculo
}

class Moto {
    + chocar(chocable) : Vehiculo
}

class Todoterreno {
    - pozosEncontrados : int
    + chocar(chocable) : Vehiculo
}



Pozo --|> Chocable
ControlPolicial --|> Chocable
Piquete ..|> Chocable
Vacio ..|> Chocable

Chocable <|-- SorpresaFavorable 
Chocable <|-- SorpresaDesfavorable
Chocable <|-- SorpresaCambioVehiculo

Vehiculo .> Chocable

Todoterreno --|> Vehiculo
Auto --|> Vehiculo
Moto -|> Vehiculo
@enduml