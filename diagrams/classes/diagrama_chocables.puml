@startuml
'https://plantuml.com/class-diagram

interface Chocable {
    + devolverEfecto(moto) : IEfecto
    + devolverEfecto(auto) : IEfecto
    + devolverEfecto(todoterreno) : IEfecto
}

class Pozo {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class Vacio {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class Piquete {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class ControlPolicial {
    -  PROBABILIDAD_MOTO : Double
    -  PROBABILIDAD_AUTO : Double
    -  PROBABILIDAD_TODOTERRENO : Double
    -  PENALIZACION : int
    -  randomizador : Randomizer
    +  ControlPolicial(randomizer)
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class SorpresaFavorable {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class SorpresaDesfavorable {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class SorpresaCambioVehiculo {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

class Meta {
    +  devolverEfecto(moto) : IEfecto
    +  devolverEfecto(auto) : IEfecto
    +  devolverEfecto(todoterreno) : IEfecto
}

interface Randomizer {
    + random(probabilidad) : bool
}

class Randomizador {
    + random(probabilidad) : bool
}

Chocable <|.up. Pozo
Chocable <|.. Piquete
Chocable <|.up. Vacio
ControlPolicial ..|> Chocable
Chocable <|.. SorpresaFavorable
Chocable <|.. SorpresaDesfavorable
Chocable <|.. SorpresaCambioVehiculo
Chocable <|.up. Meta
ControlPolicial .> Randomizer
Randomizer <|.. Randomizador


@enduml